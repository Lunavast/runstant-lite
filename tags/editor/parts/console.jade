console
  .inner.z-depth-2
    .header.cyan.lighten-5.grey-text.text-darken-2
      span.title console

    .content
      .content-console
        span(each='{messages}' class='{type}') {value}
        span#console-input.input(type='text', contenteditable='true', onkeypress='{keypress}')
    btn-fullscreen(query='console')

  style.
    console {
    }
    console .inner {
      background: white;
    }
    console .header {
      padding: 3px 10px;
      height: 36px;
      line-height: 36px;
    }
    console .header .title {
      font-size: 1.2rem;
    }

    console .content .content-console {
      position: relative;
      width: 100%;
      height: 100%;
      margin: 0px;
      padding: 5px 20px;
      font-family: Consolas, Monaco, 'ＭＳ ゴシック';
      overflow-x: auto;
    }

    console .content .content-console span {
      border-bottom: 1px solid #ddd;
      display: block;
      line-height: 1em;
      margin-top: 2px;
      padding-bottom: 2px;
      color: #0055ff;
      font-size: 13px;
      white-space: pre;
      word-wrap: break-word;
    }

    console .content .content-console span.input {
      outline: 0;
      color: #222;
      border-bottom: 0px;
    }
    console .content .content-console span.input:before {
      position: absolute;
      left: 7px;
      font-weight: bold;
      content: '> ';
      color: #47b4eb;
    }
    console .content .content-console span.output {
      outline: 0;
    }
    console .content .content-console span.output:before {
      position: absolute;
      left: 7px;
      font-weight: bold;
      content: '< ';
      color: #47b4eb;
    }
    console .content .content-console span.error {
      color: red;
    }

  script.
    var self = this;
    this.root.style.width = opts.width;
    this.root.style.height = opts.height;
    this.root.style.float = opts.float;

    this.messages = [
    ];

    this.stack = [];

    this.on('mount', function() {
      var $input = $("#console-input");
    });

    this.keypress = function(e) {
      if (e.which === 13 && e.shiftKey === false) {
        var target = $(e.target);
        var v = target.text();
        if (v === '') return false;

        target.text('');

        opts.onpost && opts.onpost(v);

        this.stack.push(v);
        this.print('input', v);

        return false;
      }
      return true;
    };

    this.print = function(type, v) {
      this.messages.push({
        type: type,
        value: v,
      });
      this.update();
    };

    this.clear = function() {
      this.messages = [];
      this.update();
    }



